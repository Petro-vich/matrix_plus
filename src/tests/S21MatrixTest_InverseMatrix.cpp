#include "unit_tests.h"

TEST(S21MatrixTest_InverseMatrix, InverseMatrix_0) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.3205841765721473, -2.0288288391387104, -2.9008639332185373, -2.9056820381883184, -2.1401677337479423, 0.5753831975475112, -0.7569002161297664, -0.9842234606465303, 2.6423625363759067, 1.5014218698183148, 1.8753548736132126, -2.2887186268097253, -1.187605101186419, 0.5869121025920263, 0.20621892372448603, -1.219364529743429);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.03389962748149577, 0.24391727940050836, 0.22859728171596394, -0.7067332886909846, -0.17844378582569534, 1.575701046822391, 0.5708555886162033, -1.918104714202497, -0.06302473859148312, -1.2216754300098882, -0.22968265686259995, 1.5673823526888064, -0.12956509556037288, 0.3142522252363446, 0.01328056148634912, -0.789931875698428);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_1) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -2.858044050993719, 0.510417362742567, 2.4367046569053983, 0.022721757065975012);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.017362398719977915, 0.3900257246745531, 1.861961541670197, 2.183920029975222);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_2) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.6914216815199401, -0.5235870182782407, 2.4241877902895483, 0.9601339915871026);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 1.5859083870806807, 0.8648387109818285, -4.004170024356442, -1.142060851235287);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_3) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.7036199903490141, -0.10774278113204527, -2.9887126292786927, -0.3854704264026392);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.393856684935354, -0.11008682299808259, -3.053734781621297, -1.7406837874706242);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_4) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.9405097119214614, -0.6700165721067508, -2.523466119799368, 0.12383722805899255, -2.5365405333121744, -2.811388402760624, 2.831135777040056, 1.6576707258922996, 0.4519876654164028, -1.3211597579499301, 0.6708150956249175, -2.987347584866858, -1.1176567802774366, 2.111174564062792, 1.8704145345460086, -2.152553965640724);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.8580384185970849, -0.38677514488731746, 0.21858909387351483, -0.6505781311522576, -0.0846523475754163, -0.1323314197456575, -0.1874048632461567, 0.1533055329518369, -0.7059122019250698, -0.11023183419010248, 0.12183354902125947, -0.2945828367064603, -0.25089817859183433, -0.024748317559707314, -0.1914343282548287, -0.23238173179742408);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_5) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.364405553235814, 0.3862060713066482, -1.2235020120620415, 2.80088981376555, 2.4424332111991873, 0.6538372803969796, 1.789813845875682, -2.1177071047720486, 1.53954513980064, 0.3876376643996551, 1.5010503754140156, -0.32270813348595917, -2.775575325562197, -1.6893497600047531, 1.6378058966537576, -2.0556702367756374);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.4255710876419017, 0.4445312993116518, -0.38152411050854906, 0.18179548473288823, -0.934465060666859, -0.548808014050928, 0.8025106638759535, -0.8338379021144491, -0.18534742812385005, -0.4178533560720303, 0.9885534669424153, 0.022736649323726096, 0.04566423322606628, -0.48211239904399383, 0.643238581497553, -0.02855758794408829);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_6) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.1362335884302193, -2.9145097266248055, -0.2570289459462889, -1.0844742146620436);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -2.2448110766219407, 6.03289928777938, 0.5320379378983178, -2.351950567799261);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_7) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.3731100465352162, 2.8655615416963665, -0.009601889196804603, -1.923455935805133, -0.07296237439123132, 0.6818544995243316, -2.458468575299565, 0.13065170871072063, 0.4758669894223013, 0.9356202290251705, -0.9212759902047356, -0.9634155943177651, 0.4821478064155804, -0.9943543037199349, 0.14954308986115405, -2.7421327910690465);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -12.649020434642793, -16.598390202075944, 43.269608891951606, -7.120512410902991, 3.996175015997849, 4.859294083724784, -12.701938863503539, 1.8911026177101387, 1.2922738198069834, 1.1882730561713601, -4.170015338041789, 0.615242254685407, -3.6026922888852355, -4.615764571270178, 11.98664693221999, -2.2688763500631093);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_8) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.8616393231473314, -0.5917776675455322, 1.5399270720735778, -1.432184884520955, 0.353115309547106, 0.611463185189983, -0.7116983867805322, -0.296118093950275, 0.18080154468784304, -1.7422667909772223, -1.2561057233403838, 2.625996405101553, -1.5111372414223594, 1.4706830821112113, 1.402198046693858, -2.6931196874886894);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.11304002202531764, 0.048007246688392985, -0.433792118501032, -0.48837286182675993, -0.5532321175612572, -0.7473530979456208, -1.8688527858953552, -1.4458938695673307, -0.2195713313755212, -1.5143040114576873, -1.2308747436469625, -0.9169266052358918, -0.4798637805813138, -1.2234952787710034, -1.41802123718384, -1.3642787378469914);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_9) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.3518536505434477, -0.5319598759218032, 0.5735452163352566, -1.234255419200556, 1.9925915730532573, -2.016779543932432, 1.0841191172175844, 0.8024501838364237, -1.3938873949795576, 2.201760033439723, 1.5756074005276055, -1.6228543758932472, -2.391858807049313, -1.417206453534905, 2.215433037236833, -1.384663250181886);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 1.352655221235111, 1.0099080429059104, 0.4859244501519, -1.1899685808067233, -0.8563760937246914, -0.4760219536982612, 0.0712647194496877, 0.4039615180217681, -1.3727829074717024, -0.40685649840060467, -0.03903270416089159, 1.0336282598376767, -3.6564898957451004, -1.9082613693640502, -0.9747740745797232, 2.5736756965220366);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_10) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.6933423159679277, -1.9622913693880766, -2.72560664271069, 2.242443108562151, 0.7986284463348223, 2.3915535370440786, 1.7691337155638074, -0.21481810134107304, 0.8329441257238517);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -4.055863457674551, -7.637203017070454, 8.6561526562991, -8.129700077708986, -14.601743132165941, 15.32213927146717, 6.5177937941653825, 12.45523474358774, -13.233082873316489);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_11) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.058483818888548, -2.4376339575685484, 2.5250428717479103, 0.24492915794887438);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.038184362773691825, 0.38002620890362354, -0.39365322545253095, 0.16501722567045135);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_12) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.5378412905526604, 1.5042443123363638, 1.3845652554085621, 0.8846653238480497, -2.503625106680988, -2.400684109739333, -1.0443230297482653, -0.6614151925467344, -2.4263101575366144, 2.8386161168548645, 2.8226922537706827, -0.13002293060283288, -1.728110907939344, 0.4356640145915227, 0.2586082013757114, -2.49968249588935);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.43455358268273464, -0.05548097398828285, 0.2063559551579816, -0.1498468439544488, 0.922080666141697, -0.5962797050524938, -0.7206874096368712, 0.521597098131034, -1.2856989311470406, 0.55156178365017, 1.250002433938535, -0.6659860150589858, 0.32811441627519705, -0.008505853446580882, -0.13894671286844226, -0.2744494131934454);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_13) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.571706030510203, -2.9719348596531985, -1.2846925759354113, 0.9667700059486095, 1.329624261761417, 1.9871740280971046, 0.21284278973685744, 0.4911119735816323, 2.66509245117837, 2.434111981768549, 2.4828860050617347, -0.6957482957069754, -0.3153895369498718, 1.9701510062528484, 0.0813865466325927, 2.6887946783959373);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.17087386719465883, 0.2616587903643176, 0.06897839076308318, -0.09138217161215251, -0.14494731017348705, 0.49511458124503827, -0.11520851199295978, -0.06812796624729893, -0.005886131689947881, -0.8520797993092205, 0.46365165280996357, 0.2777236881272162, 0.12642801382564647, -0.3063001500317825, 0.0784731624868129, 0.40270774011538607);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_14) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.41052691982582, 2.448941203012721, 0.7878057445124056, -0.4976494817039052);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.1891313113354684, 0.9307182628290892, 0.2994049808453302, -0.5360696952948175);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_15) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.9529055171144662, -2.2825501344636243, 2.115974257308963, 1.5275103717393455, 2.0579645255738974, -2.1366216994452234, -0.7676235046801017, -0.650358330491783, -0.0054135618516277795, 0.1744284734735131, -1.2034244694457763, -2.9865738948806806, -2.513907182101008, 0.1807221523162874, 0.3391045974034612, 1.8028123014799);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.06673944110183379, 0.028429237096810646, -0.21879046340022146, -0.2956489182705502, -0.13999724815296116, -0.3328406974804575, -0.06425044156948294, -0.10789096742395334, 0.3303486039301941, -0.4305340860772397, -0.1840335350416937, -0.7400893030721264, -0.14116771138092216, 0.1539906501892881, -0.2640323793162077, 0.2924497650452565);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_16) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.3046864347629956, 0.8375637159269012, 2.633910747303089, 1.063980740229324, 1.3722455454956233, 1.8807841084358978, 2.090908124567398, -2.8478003495850785, 1.8078551228618513);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -2.1585291881267583, 2.4830217129033043, 0.5616298759810812, -0.5533471133220879, 0.8672164257066605, -0.0960143105940377, 1.6248338025889708, -1.5057130398725198, -0.24766700179752643);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_17) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.44366388850191063, 2.602101932223505, -2.465026221654938, -1.9839931597860947, -2.4917508373496524, 2.083262979489654, 0.9840897136233249, -0.6977421272955264, 1.4490227829956126, 0.37630463210069953, 2.4944722783990283, -2.489079669736154, -2.9576551047568147, -0.11965441746868244, 1.263999377241289, 2.9777136937972895);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 1.0731897701007025, -1.4535043617655805, 1.0144890333860912, 1.222472789568322, 1.5452707626041355, -1.5815323910843646, 1.2763905805518414, 1.7259358088999146, 0.18902810479897417, -0.295800237857423, 0.4746390792619546, 0.45338565127223973, 1.047814729332174, -1.3817012107161284, 0.8574669030168188, 1.4269637669625879);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_18) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.8117568701695017, 2.9091955233887425, -2.0269298279664993, -1.1004823198446463, 0.1319413134488352, -1.370902610748313, -1.1973481284092014, -2.5491811336798262, 2.945547516356779, -1.3393587907501812, 2.005181656736691, -2.134346094130497, -2.5389896494239905, 0.48034917242984587, 2.4080689304943856, -2.742631018435947);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.07836863731885085, -0.06105834753991302, 0.18903563515728203, -0.12180347246901269, 0.22054760817089622, -0.19325508617614323, -0.028996622994381847, 0.11369458856359584, -0.05982545687908386, -0.2331295533196248, 0.15244800433858915, 0.12205415592889163, -0.08645024441680794, -0.1820133437823868, -0.04622667842643732, -0.12477592486213364);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_19) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.3346504628292077, -1.6813351306852988, 2.5727323903129022, 1.4045977396670386);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.18469713734146276, 0.22108663340354096, -0.33830063527589965, 0.3069941272151648);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_20) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.672447844971336, -2.3282640682666726, -1.205267703376285, 0.7565752426004368);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.3293145763803722, -1.0134237180528627, -0.5246169856127886, -0.29269643617135965);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_21) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.0518608061021304, -1.9750925374333224, 1.2556557881323593, -2.5278140503886126, 1.4629382473904196, -2.703986343696795, 1.61589978944159, 1.2196277430519782, 1.2105929750557678, -1.0024632803178632, 0.6295199941837173, -0.9807361577058806, -2.2756542063129688, 0.034749144287425704, -2.622666096479538, -0.9577156102201698);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.6196577823141833, -0.0956417318924366, 1.4788304848133547, -0.0006371292383422821, -0.07869413864309185, -0.3246905378133508, 0.025274709426055284, -0.23166089966626965, 0.6372073739107121, 0.00048806168458119715, -1.2699655216660768, -0.3807449614299712, -0.2754365579383092, 0.214139527549889, -0.035222378055803014, -0.00838790802148233);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_22) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.9200296294215571, 1.1607615480244906, -0.8876135285566531, -0.5482239513306331, 0.0021180545326355826, -0.9324658781775126, -2.0564912867619833, -1.8807031190184262, 1.5221289095045076);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -2.6323439652733738, -0.14660672549063195, -1.6248360234006443, 4.138556780086902, -0.639061344400214, 2.0218629774211214, 1.5570325229356603, -0.9876825200693223, 0.9598811731386034);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_23) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.8209748485840822, 0.39593228281512793, -2.0176270236363396, 0.0019269986744219203, -2.2050411929600537, 0.9513862357644074, 2.428677141231196, 0.31137125954846656, -2.9826668531068554);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.4174470677017736, -0.03673561853225149, 0.2706647314828523, -0.1539575952153417, -0.4884447355653814, -0.05165531429950541, -0.3559841489620444, -0.080902970869752, -0.12027046654984715);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_24) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.07072624619984058, 2.93989871361937, -0.8775515944915324, 1.3212761066404646, -1.8628595695384507, -2.5989768820634405, 0.7698336941942645, -0.8120197457657383, 2.1300606335314267, -0.07897227714705535, -0.9958440334567937, -1.2850724837042957, 2.682858648861001, 1.1453581108619737, 1.7984105250384843, -2.5907651079043594);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.634133787394296, -0.7350159242546265, -0.09357561288312144, -0.046614388977285114, 0.5478337332538886, 0.30480421679405906, 0.04478440315700501, 0.16164389973320756, -0.45625887501640666, -0.41567028488143704, -0.5846601163393942, 0.18759676645105178, -0.731199545436093, -0.9149342236977148, -0.4829518762343715, -0.23257363776869922);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_25) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.11043979249358671, -0.4003272185826239, 2.383857988680374, 1.404982687296215, 0.5385757142338523, 1.41778191568027, 0.6948635741795215, 0.15182256181048714, 2.7071373423126515, 2.274658920015944, -1.5408475414925362, 2.9208764327370993, 2.7764782020073833, 0.16699428172366382, -0.9400550820944371, 0.9945167398046806);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.0065257580938228935, 0.23800088039300138, -0.1833953310509611, 0.4930762853919953, -0.15140271813380354, 0.492132153480432, 0.12245308784129826, -0.22088004766798053, 0.2505422902812288, 0.3429344335654508, -0.17826335071233404, 0.11725539725123435, 0.24402637644169195, -0.4229292861752599, 0.3229375554189086, -0.22312678353186838);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_26) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.154283889783529, 2.8291970093435497, 2.5325865391617945, -1.2851561472789599, -2.69410084357471, -0.480479755979502, 2.2135283846642455, -1.2348715554008618, 0.9507614594322682, -0.9234503631003403, -1.4776518929818714, -1.6946445435730673, 1.9047076132248213, 1.7057194207157869, 2.7539215141093196, 1.7176852608903435);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.06399948769451927, -0.04530799704801452, 0.3904899936369774, 0.3047955624567203, 0.3825249823323626, -0.2775412051699551, -0.47858346548717207, -0.3854910330154123, -0.08825081533458617, 0.27351872090326457, 0.20848025657054678, 0.3362923073718519, -0.16740212388059042, -0.11267674223522388, -0.2920083367486088, 0.08783360745536908);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_27) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.045096764766508, -0.2475515070201828, -1.4576059844272498, 1.8738492628996566, -0.021670579550923996, 1.7270275879728114, -2.9097716314740074, 1.883138779929924, -2.954278791330446, -1.618982487419585, 1.9958428029875543, 0.6225203230245988, 2.6094161728133782, 2.288044492979645, -1.8313207576472679, -0.9684998567069312);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.6284672213980487, -0.4111453146411247, 0.5893505348167246, 0.7953453305755671, 0.6330826856757131, -0.21431732384709498, 2.1731101150782073, 2.204974483143805, 1.0949397300568244, -0.6801135163608123, 2.5342867395376403, 2.4250379100650825, 1.1185009689291798, -0.32804424668860405, 1.9297282529904147, 1.7340678137217065);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_28) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.16824024685993866, 1.8087616686162304, -2.2612545010667375, 1.7389270266340606, -2.914741709774034, -1.547227272540137, 2.353779442723403, 0.11772783937814602, 1.7093886621385872);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.17691794302803115, 0.12376505238126564, 0.3460588996086939, 0.24377653732053475, -0.18556548028139935, 0.15451653926772008, -0.26040017243429825, -0.15764080980201572, 0.09784947187150388);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_29) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.33270249995364054, -2.5529455805437706, 2.3644106998659105, -0.013868453336581599, 0.7389738895085403, -0.6247553144788092, 1.0982288469609065, 1.2460805935204924, 2.3732808618701045, -0.5320088854749718, -2.471399758561864, -0.9478143381341315, -2.5598298860599447, -0.9034902615715068, -1.7112680236980744, -1.1283459585568558);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.0586917259601035, -0.06594637269793811, 0.1859013570826613, -0.22970652613293402, -0.18138492032428585, -0.3529079216138265, -0.148291159575418, -0.2629368188055563, 0.21697216781389694, -0.3659781771529108, -0.18639354849148634, -0.2502609174513668, -0.316976238686594, 0.9872389842888045, -0.020319044557918886, 0.22496113847744445);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_30) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.5565889856000608, -2.715776387242488, 1.1978530627967938, 0.009290698075756332, -0.21229358102687357, 2.7091779543137378, -1.350802613081329, 0.6073146435375101, -1.0737269254815713, -1.5382181719337982, 0.1119599489305445, 2.7447379559138545, -0.16594814262417623, -1.4154049016409531, -2.4485267592897335, -1.6797693788811023);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.6294932479730025, 0.555962588600025, -0.12796584622763782, -0.004607812402991311, -0.07148542063391176, 0.1635353773566433, -0.11579951247896277, -0.13048579167345908, -0.1469061796937309, -0.35420544400758147, -0.09821694106516782, -0.2893604241711991, 0.21218465822258492, 0.32358714304681896, 0.2533834143162678, -0.06312674384448679);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_31) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.9822730402798863, 1.235677437102714, -1.2703172144736572, -0.7222925608312334, -0.5668253011843563, -2.068238619528434, 0.3322325663642509, -2.219856925881929, 0.579844192007323, -0.05640661401871405, 2.982701836526373, 0.557580582281668, 1.7051050872157552, 2.9871787853183935, 2.092289423799457, 2.6124597364428714);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.7954999264546133, -1.4219729734006965, 1.400099850127086, -1.2871629434815466, -0.5334583454562823, 1.908305935916194, -1.7332498057592511, 1.8439631902625202, -0.21369718189546738, 0.6432329520120889, -0.19917044172989473, 0.5299935498658157, 0.26191440386669296, -1.76908646472165, 1.2275526533055925, -1.3100295829172681);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_32) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.14599560258063615, -2.310191415304187, -0.5860585244792187, 1.8533385947458862);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.1408764650112717, -1.422105503475475, -0.3607653666702216, 0.08987183855750025);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_33) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.612051020100127, -0.051295202674321416, -2.437295945895654, -2.0562856715562825, 1.15255518522412, -1.3730541278255284, 1.884054281831503, 1.298417485755686, 1.3909699193449274);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.34858345958348913, -0.3184512364971609, 0.29644801252046055, 0.02813845401381233, 0.38509821233936586, 0.4294430969749156, -0.49841884477564985, 0.07186436000672128, -0.08348172880230553);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_34) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -2.5976599192564476, -2.4038364616723067, 2.319722557876429, -1.5961763256834969);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.16417248436094636, 0.24724323845686622, -0.23859182048175398, -0.2671786792017295);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_35) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.14963253827717438, 2.2072484451501353, 2.0324698659943294, -1.9912910772993009, 0.9353295155708063, 0.022419943326814185, -2.7097834416451447, -0.19097602555871784, 2.987655753962117, 2.908996354569048, 1.4366936346239632, 2.1014380380529722, 0.916484436876468, -1.6229524703877531, -1.8772758314982858, 1.3004837196177679);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.9247271458143175, -0.2031387933160463, 0.03851272408275711, 1.3238721451904747, -0.5519564374518541, 0.4087404419225169, 0.16901637402951594, -1.0582398845532774, 0.3713171218862348, -0.4373168917389, 0.0015786241107409997, 0.5017871728561348, -0.8044948404074602, 0.02197291712852972, 0.18606364598309078, -0.7603234898718084);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_36) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.1576577553626635, -1.4908409632007085, 1.176503938813788, -1.6932221252201947);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.8914446747538093, -0.784895388357438, 0.6194037719333743, -1.1359599471978146);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_37) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -2.008745984262859, -1.8608054789937476, 2.668707014543056, 0.4672249198840688);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.11601130735687046, 0.4620354505244639, -0.6626362947130707, -0.49876887525609875);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_38) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.2625977404157378, -2.761033655829403, 2.6414785648782306, 2.1854316809558414, 2.903031194630346, -1.519925067173656, 1.2288670218662459, -0.174350275216411, 1.3764836393544915);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -2.223825106622369, -1.9907716876553978, 2.06930360714621, 2.906307939625612, 2.970665350004972, -2.296984361748341, 2.3534612635010776, 2.153552655201981, -1.4118430187814035);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_39) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.6358999409455968, 2.1813696885812828, 2.6308853372109775, 2.8711200628789504, 2.2514472959068073, 1.3205027431930763, -0.5664131142792383, -0.7290070379218232, 0.857599671631462, 0.8001932458146581, -0.42965599576970437, -2.2537846184782415, 0.8108023149642776, -0.08996840020483798, -0.23678780808442346, -0.9790063149854853);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.08961923609652377, 0.2801682566733306, -0.5565107341668184, 1.3353522531282753, 0.03294660069094, 0.31172774245231233, 0.5006428755413123, -1.2880399899976331, 0.4957251614191802, -0.27134111525391313, -0.5699116913702603, 2.9678605732655186, -0.048704837260841884, 0.26901327263696323, -0.36906206264403313, -0.5149748236527826);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_40) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.9861938321512405, 2.9043954671418826, -1.6705569483207223, -2.821233835841313, 0.34770785755299816, 2.7591776742536167, 1.850478981484697, 1.7531303523330548, 2.2259729566213666);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.11833688147384229, -0.27358522134604024, 0.25030930115193245, 0.3315996454979407, 0.21879526202160351, -0.022344795433049836, -0.16278611578171395, 0.05511616238822878, 0.2587548230203192);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_41) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.6632011133248019, -2.5999847824328635, -2.8631147504588936, 1.9778956319420917, -2.086029126716232, 1.2437581165498806, 1.481888251428618, -2.5880227431888434, -0.3469888360095217, -0.8499140027394079, -2.7730934680516572, -1.0138526722571588, -0.47146146229193464, 0.46260272658573287, 1.6327368885090223, -0.38120456402770575);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.38238946782826605, -0.7724552598055396, 0.7410824794103852, 1.289220845229693, -0.04585150903979632, 1.0056054855049672, -1.393270675723692, -3.3594775343691885, -0.0353326822976332, -0.39244648285918693, 0.36124562452550524, 1.5202499604234818, 0.26595140871079664, 0.49479175822159566, -1.0600701671526604, -1.7831717828665146);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_42) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.8935976612862546, -1.5268507016421071, 1.0036948052753232, -0.06137925679590239, 2.548235719762582, 2.460692412120033, -1.5557949940464975, -1.9010379312786265, 1.502482466850843);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -1.3487043470380344, -0.061200606453723445, 1.0011986482911013, 0.5923565481314885, 0.20350611587081782, -0.7290009497877714, -0.6470725790025517, 0.1941169063860025, 0.7799101909180849);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_43) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.039057722310909426, -1.8726051969342785, 0.24605656190761405, -0.5763026763682415);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.1924921485929014, 3.8748162837465694, -0.5091430774427036, -0.08081868973990414);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_44) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.4954615349790465, -2.086889641818289, -1.2941405164601216, -1.9202278639786514, -2.053555531281205, -2.5267668347873347, -2.6681461783690636, -2.0142206008895958, 1.9634257848504948);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -3.1342190932183245, 2.3036019651943698, 0.8987073225900851, 3.612020632457473, -2.8700318430583893, -1.3127254663545314, -0.5536997300310473, 0.18613869657788357, 0.38390237940912286);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_45) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.484096363218236, -0.7427912768440921, 1.8634330452820809, 0.31770404790672657, 1.3872545785645052, -1.4829485074528836, -2.107878828695924, -0.09537183233865232, 2.360041608651292);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.7541113718326843, -0.37922850287904436, 0.3571376473525949, -0.5720040878062282, 0.46574367977249853, 0.7442941715898961, -0.6966523247290605, -0.31988796364830807, 0.7727777247836596);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_46) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.5981054973534441, 0.6351833212182583, -1.0874826603573557, 2.869299985091498, -1.8596595353976109, 0.6580800014966757, 0.4363830347532338, -1.8773533049088327, -0.18289349555416923);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.3463704431592279, 0.4743585602493907, -0.3526969002457946, 0.1784980792616158, 0.12837433427469647, -0.5994362111144741, -1.0057972446184864, -0.18591121860426213, -0.15614219397470977);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_47) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.5894946497651405, -2.6863326339528486, -2.286073585776487, -2.1064061432049086, -0.8209761118411891, 0.7159129931583674, 1.8321325071005639, -2.4830392383238578, 1.093673955310341);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.03433063030627867, -0.3361567083593947, 0.14828606582258605, -0.14108156342196623, -0.1382838593233513, -0.20437866592691153, -0.2627956829472792, 0.24917790426956182, 0.2019249250759711);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_48) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.052756031540307, -1.4917881018011994, -1.8345380159082738, -1.4118061454368531);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.250549661865006, -0.264743857142565, -0.32557081653876085, -0.36429741523375425);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_49) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.728085148972326, -2.907977213449187, 0.09859636378623904, 0.16294375853529797, -1.7948626348002845, 1.4197559759134935, -2.7139536217956, 2.981725229122465, -2.988792345008898, 2.408906556897403, 2.1574874785339766, 2.179798886618804, -0.8714302544566626, -0.35058923864676084, 1.186839766838844, -2.786441316731982);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.2669625768341818, -0.3977745610830568, -0.17158846919029463, -0.5754948702528041, -0.5806956109074303, -0.3758601190025713, -0.14425477333487588, -0.549008051946389, 0.08415347122233087, -0.21312946929151386, 0.21974422140467303, -0.051242070932923024, 0.19239650995683444, 0.08091136495340977, 0.1654090944788416, -0.13165042060992507);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_50) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.20814706882450995, -1.1293642156228454, 1.7058341785332702, 0.060819845511963955, 0.5660575326591886, 0.9709417634668576, 1.3888035760174713, 1.235974345646607, 0.11948976253245513, 0.8567035356290078, 2.2175784777086234, 2.44590505452319, -1.5032480156180732, -2.1621706738340087, 0.6352702385031144, 0.49187387370316227);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -4.428355133723528, 22.115929363067508, -12.529585776760728, 7.27989008182841, 3.074156512450122, -15.092785961556581, 8.640696953257425, -5.422117267266323, 2.1823719090535816, -7.6923460257305685, 4.405712520598969, -2.848583294491791, -2.8390630343505925, 11.180236488393989, -5.9999760164737035, 4.126174760334195);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_51) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.3281555173065387, 2.1057596286188813, 2.8123768497381896, 2.216213414661654);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.33329262591009434, 0.31668166590580804, 0.422948647046748, 0.04935075897764085);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_52) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.1199341315521996, 0.6653975529630003, 2.6186171905039233, 0.8631604460910864, 0.3996896942299286, 0.6396612644367554, 0.9852046701098827, -0.5581629332408737, 0.33004109936586);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.15774982418409036, 0.542413624472788, 0.20035509715758654, -0.11141031200595036, 1.058078648280945, -1.1667364111760903, 0.2824822639719411, 0.170257116674799, 0.45867076951904273);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_53) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.998523632301172, -2.2414762549808716, 1.3588775678408442, -1.1391193721380162);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 3.080494722685414, -6.061573478057437, 3.6747818348945893, -8.108839557187434);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_54) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.2479543976671934, 2.190249766229453, -2.913019988743935, -1.1054277804505561);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.28378573855032085, -0.5622815515507974, 0.7478313314874401, 0.5770955011727787);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_55) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.452803614279768, -0.8077839861932503, -2.4460452166329345, -1.8957991779496393, 1.0431253904527598, 1.9643541588994573, 1.4224546246834269, -0.13021540550788968, 0.043348493582810566, 2.4435094428854924, -1.8224839804818165, -0.013931827173466083, 0.18668554532143533, -2.3336941445956185, -2.08970209492566, 0.196115254503348);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.007948214600512827, 0.8649397226940985, -0.07599122873349928, 0.6457325264758375, -0.020394521484037118, -0.022673876588287952, 0.2339378443154106, -0.1955851092730946, -0.0233408005263549, -0.0013598936824750487, -0.23920408983550256, -0.243525674316275, -0.4989602269906585, -1.1076517737386204, 0.30727111953899655, -0.4379101723730658);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_56) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -2.2028294067100096, 1.2145776397219086, -1.99005096920318, 2.6656916252665264);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.7715477330966485, 0.3515427725079119, -0.5759928490910814, 0.6375786377675293);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_57) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.8429026783685298, 0.8132459379174737, 2.4688663028331552, -1.301578217715924, 2.2924778185605224, -1.0571758842107553, -1.7502358043151325, -0.45663271858480314, 0.7118269910180022, -0.7206277673980468, 1.6272155176092404, 1.14289140349182, 0.7868453457179427, 1.11256216686661, 0.28068512671043333, -0.5396862727645155);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.041081426405555704, 0.24476112113359288, 0.2521280198533663, 0.4259135569771986, -0.2881551827251556, -0.15142124274527022, 0.09694262887398518, 1.028366530822281, 0.25610012824112344, -0.15053528066042757, 0.10886817667386862, -0.2597259145940366, -0.5207317674835786, -0.0335925003156653, 0.6240628215865043, 0.7529348347533604);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_58) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.44527032411511236, 1.0593099329483797, -2.0082738112790928, -0.20228657037950137, 0.7734618771777417, -2.5733124821415174, 2.944872032927954, -1.8737273224836843, 2.4984465252245247, -0.6502596967565717, -1.4003552017546903, -0.7778643029666443, 0.3941034795515712, -2.8620369382244557, -0.7128043080197974, -0.5036732336841534);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.5011562463486284, -0.12424418209146637, 0.5597251615519676, -0.20095037602183963, 0.22097295184791654, 0.06751886475262846, -0.008810356061079206, -0.3263197838953616, -0.3808072766124354, 0.06589842489130708, 0.0819834767580792, -0.2188234233989756, -1.1088520619656883, -0.5741405562974046, 0.3720011513333855, 0.021288230050551058);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_59) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.9901803857877756, 1.3662392602223807, 1.270129982123131, -2.880983862944725);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.2783569269476909, 0.13200426661261205, 0.12271831272478863, -0.2889073534609782);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_60) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.12814667340488395, 0.5263981004753546, 1.276083718276264, -1.2793317048738826, 0.8597549313176787, 0.8154297226516976, -0.7293592078428217, 0.15728563659477235, 2.247341327559476);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.9133900329183093, -0.49737073864903647, -0.33817349267391544, 1.1546338011880737, 0.6170827019845206, -0.8795268197850649, 0.21562461939564653, -0.20460629096242547, 0.39677416780757513);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_61) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.4338796047430147, -2.7629564062457694, -1.0877572713829309, -2.3015533166722904, -0.2606814895921614, 2.5443649494852494, 2.739655326388376, -2.7225966540677327, -0.759729628863842, 1.3004060661974588, -2.2549677967932418, -2.127942530793277, 2.6218849298370426, -0.2431544776212462, -1.5404761715438033, -2.3484506315474523);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.1137113099697581, -0.01865419695569573, -0.1541106084840368, 0.2727070377619807, -0.20793459170975265, 0.05816667763659092, 0.20427191047258764, -0.04874308930084997, 0.046933078028841516, 0.17103805692523183, -0.2399556889148991, -0.02685800847021684, -0.13620768816631537, -0.13904175490261472, -0.0358039847492064, -0.09868945160604027);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_62) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.1048362550901942, -1.5522763285344525, -0.09366028741792132, -0.17236558030821492, 0.5223261710400449, -0.9010062821727312, -0.4772890942591257, -2.8854245331831434, 0.6286534211525696, 0.8674287381728423, -1.1972060327152114, 1.0377362029404686, 0.7328307965183893, 0.6080506912404164, -2.195331148169207, -2.998394432549852);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.38192757047277026, 1.0237708509382872, 0.8491418044368585, -0.6693572895724015, -0.3616535874318659, -0.7386751670807571, -0.6232716759262482, 0.5159216147305357, -0.37137653874117044, 0.05470528950538961, -0.4714469202197967, -0.19446173671079714, 0.10522380920379402, 0.060366519565976016, 0.42632102911987624, -0.2501042642491628);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_63) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.143711488813245, 1.895876637408211, -2.15391599424723, -0.3290998336747206, 1.8085250660300183, -2.8004404994040994, -2.7158186630581516, 2.083364797674082, 0.11675385346942946, 0.658257952294456, 2.7465400243786915, -2.6627264140930693, -2.5707031013395865, -2.6689689871445843, 1.4906652632746233, 0.7890948478388253);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.18931915066302576, 0.05639289979299367, 0.01093234794727955, -0.19095553852307692, -0.08347875604783968, -0.3206851775680696, -0.2907337414472597, -0.16919771791049942, -0.2979480909693562, -0.2821851285036752, -0.1714705933814332, 0.04215034203317691, -0.3362646074666803, -0.36787190170696404, -0.6238163419614755, -0.006723535981177988);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_64) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.0509888453160166, 2.7594438165042465, 1.19751391004327, 0.03332368738296276, -1.10713091168966, -1.276526376640707, -2.758250605919981, -2.3709738417848625, -0.7193147367674624, 1.702121464439955, -0.10554790430388827, 0.20090233891726106, 1.5197690172696294, 1.8769077829308154, 0.604965561959049, -1.6183425365991813);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 2.867454863974681, 0.9697574809765592, -2.128471621774769, -1.625941553425306, 0.7323167445792186, 0.24342217266660424, -0.03565415176609738, -0.34597565068011527, -3.4318894814376373, -1.4303396676171645, 1.9863054261212176, 2.271452456667081, 2.2592158500159227, 0.6583168144958816, -1.2976600157417202, -1.6969642793381046);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_65) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.5316423221021127, -1.7665119816658674, 2.9486202511405404, 1.4122396782081132);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.16077302301771065, 0.20110429969634067, -0.33567856704649723, 0.28820871952866445);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_66) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.8198523379280185, 2.549429231940067, 1.1432296254502683, -1.4531632709516145, 1.2545629361759758, -2.780882656166278, -0.9476930086539088, -1.2271665800094538, 0.8222293810163182);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.1575299619931594, -0.23150150951921866, -0.5639370520651228, 0.25340739430177994, 0.027080624176746688, -0.2607481650894998, 0.1966398252275304, -0.22640874846698733, 0.17705444222927452);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_67) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.8571238894536535, 2.631056894398471, -0.8546963819696609, 2.1856806264395336, -1.135471162153219, -1.5555572251641172, 0.6849344951674539, -0.034185783039494044, -1.028232203062859, 2.670850654662095, 2.9104583388508987, -2.40092212193804, 1.3265231123297072, -2.0682004088714203, 1.1072827775846612, -1.0078595602144147);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.12027007236947049, -0.2768886225951607, -0.024783381164460702, 0.3292528073258089, 0.05398262591971895, -0.17550264410988775, 0.1104802468899438, -0.1401643635882451, 0.3431710023534976, 0.6371098656272333, 0.2083054720276109, 0.2263776669448334, 0.424544747387243, 0.6956686151606463, -0.03047841114587363, -0.022509540275459528);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_68) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.7821074618610009, -1.5417921399180148, -0.6818383625700668, -0.049967180435036784, -1.8040612390266175, -1.4278725751014725, 1.487112145317365, 0.7379958235727111, 2.9916227730710876);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.6681002776046762, -0.6320995410147575, -0.1494243204920271, 0.30363477917348414, -0.9760625570875364, -0.3966620146361409, -0.4070102845176923, 0.5549941022358394, 0.5063959419006934);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_69) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -2.315991719220111, -1.87757829544298, -2.7651469824254145, -0.9676800983688238);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.3279559062663372, -0.6363289815569956, -0.9371343754093792, 0.7849114231681447);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_70) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.4390150875657683, 1.384485473822136, -2.9167584196226954, 0.057508359696084366, -1.5883617921620294, -0.9390338609678253, -2.088088378146245, -0.1374423762622068, 1.364381568901277, 0.7716780916585919, -1.312573711145047, -0.09303311261274771, -1.7810156810811753, -1.8392320401826243, -0.32975510136379516, 1.1373869190747588);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.7462223793905058, -0.046033450261501664, 1.6886800084750653, 0.170294059446972, 1.2990392521426772, -0.38538001044009673, -2.2001934239679013, -0.29221718482800857, -0.0764524371648213, -0.22060716562964525, -0.23055826290794115, -0.04165132449733413, 0.9099720211330008, -0.7592279139130571, -0.9804301501911915, 0.6612582155619079);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_71) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.8638312284520167, -1.8895016888210368, -2.341380694662285, -2.0946781800329735, -2.1194154792628384, 1.6796877494977274, -2.479762096685022, 2.54975660467412, -0.1599639262492918);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.10739906276953122, -0.17080853922339348, -0.22156819653512155, -0.12255494469413605, -0.1543513822573649, 0.17307436930106043, -0.2885722779898965, 0.18758032331770785, -0.05792598614840806);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_72) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.7681562881839765, 2.815970542688526, -1.6745497691983926, 2.4334757531901214);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.854993196270461, -0.989381403016028, 0.588347205680598, -0.26988902569039064);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_73) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.7610987439661905, -0.7463151625024418, 0.8990381514883277, 1.8918564243580605);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.3209491110779372, 0.12661065866582416, -0.1525197640953325, 0.4684140805109201);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_74) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.8991028301905928, -2.8234982666666424, 1.8860432368462954, -2.3737558768442897);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.7438934263580484, 0.8848347972070917, -0.5910528455782936, 0.2817630454433508);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_75) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.581727024037539, -0.5606404182612095, -1.9695649603791014, 2.5054323880427187);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.8764260174174705, 0.19611778442913583, 0.6889740798866938, 0.5533043808864386);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_76) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.9386263384443883, -1.687431814322322, 2.0863691609104906, -2.029559744282369, 2.7544398112239303, 2.1933137849119815, 1.4008249122855148, 2.2682969945783444, 0.10171452729619013);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.14539984399989522, -0.15187932698576587, 0.29259607048846387, -0.10154575853208543, 0.08440616013781219, 0.26282130165153017, 0.26206890875484046, 0.2093909897088842, -0.059309457407753445);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_77) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.0801025323213977, 2.890530772912003, 0.6646510493625444, -2.734078141981495, 1.5834484758205196, 1.2393478507641245, 0.2568963455177222, 2.5131196726339047, 1.5932781481115832, -0.09636753698859835, -2.0814280551263487, 1.5255664209807653, -1.7555977237359313, 1.164297740346944, 2.3219750718173646, -1.7951282859068496);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.3602926537473771, 0.255765325350348, -1.2724370275235501, -1.2720464707404409, -0.027292598661257973, 0.012031826078708526, 1.1151874860995814, 1.0061398465641067, 0.11213585883475254, 0.33900828093560836, -1.22944050786498, -0.7410127657186932, -0.22501400487486145, 0.1961733794497465, 0.37744801473023304, 0.3810507994435901);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_78) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.1947244415742917, -1.898206921463521, -0.4776701822613427, 1.8854849018674393, -2.656680132360878, 1.1461209238631591, -1.7606272350147534, 1.4062405900121817, 2.1835997947971153);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 2.0276722980105344, -0.9500426418182614, 0.9422158544845765, 1.6781462318626055, -1.0808458235576905, 0.9344113491612374, 0.5541755990380746, -0.06994948494800522, 0.6159021130676663);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_79) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.737020175777811, 2.1860445756957825, 1.1531275383030177, 0.2716317024352346, -0.6927465890620494, -0.6180130696656696, 2.030106768594253, -2.860462213079442, 2.4638038622413916);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -1.3596623454919723, -3.3983638148720168, -0.21607611216463254, -0.7528437249884098, -2.5907617537901877, -0.2975073641790213, 0.24627719446412003, -0.20770107756274409, 0.23851290011186038);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_80) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.5751671205658597, -1.7685818974574194, -1.1319308176485796, 0.7891915013625814, -2.5323425810786926, 1.6017397197633247, 2.6526039616500707, -0.08912359648621138, 1.766339600927564, -1.5941641942294178, 0.11427861570252151, -0.2883890088450469, -1.550669423948597, 2.942345245509819, 2.08060727459661, -0.9319686013971884);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.5059126289127726, 0.11099442326553524, -0.0875255443222456, -0.4119374448989255, -0.39467989910792994, -0.01063988685817195, -0.5187964256670397, -0.17266093505714905, -0.2791778331928976, 0.5211305736232817, 0.19413432563850141, -0.3463163990232118, -1.0275461093921079, 0.9451457723770721, -1.0588744292480652, -1.7058489928768124);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_81) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.113022991947628, 0.8799905115820237, -2.7915446701301523, 0.5433800123590915, -0.6848958412846677, 0.6624560719464174, -1.5227042552546908, 0.5076033297336533, -0.8699237255193126);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.11701433394938138, -0.293715778883876, -0.5991611978419927, -0.24166652056581703, -2.7451585167146826, -1.3149705047253146, -0.3458337161402003, -1.0876922994878577, -0.8680509325249433);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_82) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.03253942069598725, -0.4247439855621149, -0.8937228524695158, 0.46616117613423036, 2.0769732807309564, 1.1628579647461104, 1.7898160968867431, -1.1045444450827178, -0.8492332659829014);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.1745879441323542, 0.22813749720657375, 0.49612368944711915, 0.9021279951272608, 0.5925978981892371, -0.13794233456104465, -1.5412971099135322, -0.28993983357900305, 0.047494141381467535);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_83) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.8668686363715734, 2.753772163047402, -1.7381310188756511, -0.8100593401994125);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.14758857255710744, -0.5017228769828322, 0.3166783755989265, -0.15793892902353518);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_84) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.0599680839692285, -0.0033927965080753353, -0.9433687093408487, 1.6946051725518014);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.94510870081505, 0.0018922174626956646, 0.5261319803079061, 0.591161336559034);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_85) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.5334536277909132, -0.5004273534970238, 2.6073719977829857, 0.7510043349223725, -1.1437654740479852, 1.803229804798816, 2.4343960184816638, -0.6186448329969441, 0.17554662929986797, 0.41981669707590363, -0.12305565105428729, 2.011241058205279, -2.789942305349353, -0.3713876622274195, 1.526601388211799, 0.552854904831579);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.19662241672442765, -0.012511769977974771, 0.009352164107266577, -0.31511719271109545, -0.23985203744607728, 0.3883991340054482, 0.2608937192406683, -0.18867359554594842, 0.28280465232354274, 0.09840711092108298, -0.07776029049244611, 0.008838159459136736, 0.050206909732507736, -0.07395955389309287, 0.4371737902102751, 0.06742785586814971);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_86) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.3559551361528133, 0.8744252177330356, -1.8063083659634456, 0.27956884562669204, 1.850009037022227, 0.3551281207317034, -2.4459194289602006, 1.4569208985350102, 1.3860259033121096, -1.0421457312333793, -1.7943964461082786, 2.3146069562808957, -1.6825328367638805, 0.6733687671552051, -2.224810636716187, -1.5934753278761031);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.78284377782219, -0.7772669790960247, 0.35068976465480445, -0.06391614841229824, -0.955579923335536, 1.9216515471274518, -1.2952656019703495, -0.29212052534958655, -0.15260604735136013, 0.1391224667661309, -0.2562763066995659, -0.27182873926293, -1.0173351613313226, 1.438513772058337, -0.5598280546906914, -0.3039873542821255);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_87) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.6115433303362954, 1.9512638616059004, -1.5102640010660824, -2.489236627289606);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.7004385712744009, 0.5490600838903678, -0.42496850140989567, -0.7348540749674287);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_88) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.23904059323488713, -2.4429561721233934, 2.6038715681768076, 0.9996186400386433);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.15145522290265767, 0.370139628024612, -0.3945204030537742, 0.036217758334092076);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_89) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.196364766858089, -2.510819184152972, -1.2366425602687983, 2.0169203795851);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 1.5223109147831415, 1.8950908958881385, 0.9333806560920467, 1.657750147837268);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_90) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.5295210600507678, -0.22458880646391322, -2.2731658572620317, 0.012752142770068975, 0.8621524398598588, 0.6057132482414209, -2.1837899102598946, -2.110335860990342, -1.728441231826073, 1.1031949995966865, -2.1504076090499025, 1.090093834269119, -0.8128872396465336, 0.5173221378659947, -0.7141325253842719, -2.3754537740341277);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.38000658555462347, 0.7981991172987556, -0.1498807212530939, -0.7799344234960255, -1.5914463553660807, 1.8977924211839647, 0.2757569076738705, -1.5679837217530408, -0.5386775041694529, 0.3497702347186223, -0.12725420550356134, -0.3720219674817644, -0.05460043107365167, 0.03500040930639976, 0.14959989952713063, -0.38370814590563956);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_91) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.939893933101745, -2.9412377518809096, 2.1614755276885287, 0.5729405137558317, 0.9182049357670339, -1.2241006253823277, -0.7115472237110909, -0.9179097689731512, -2.3710622034207476);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.20647924816264693, 0.5603660716604922, -0.1010705735757678, -0.1394665071963196, 0.33984418438771385, -0.3025888227831005, -0.007971982496599457, -0.29972778373541437, -0.274279720127266);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_92) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.258738819773808, -1.092383696208532, 0.7162153656935022, 1.3811881105404895);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.4444958817714886, -1.1424539050441556, 0.7490436228855708, 1.316434037849957);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_93) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.48610729810156217, 2.6288376744603843, -0.7983162685011203, 2.301872165383034, 2.757768179630154, -2.7356240911231593, 0.6033994813535966, 1.4940922277402011, -2.4451463346424376, -1.849950300167945, 0.6014381552369352, -2.3857620015102357, -2.037129513483012, -1.1899366612377877, -2.4312913043545574, 2.366663315347896);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.6267579188516471, -0.13688605792972913, -0.6890962086413398, 0.0013594891570189091, 0.13165316007581837, -0.15273095618124766, -0.06507794490252553, -0.09723186931154475, 1.3074697306320417, 0.5847950407379342, 1.242787357971419, -0.3880446553800582, 0.8698793955531412, 0.40614661937054913, 0.650857783563188, -0.02382252955485301);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_94) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.9320978238373607, -1.9186176190858315, -2.661763832147405, 0.07962901064058236, -1.0222260056610066, -0.525079997165796, 0.8059435201389196, 1.5942611380275116, 0.23229243352427265);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.1742354074224562, 1.103497960790074, 0.49786899475340757, 0.12833396233098515, -0.4254129111838977, 0.5089226858424419, -0.2762636314444456, -0.9089308500768366, -0.9152685142306187);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_95) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.2654869021786812, 0.6998966606413868, 0.5159730765497299, -1.7996776255101268);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.6820587249013749, 0.26525340825109256, 0.19554832136960856, -0.47960610869667414);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_96) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.872866959114517, 1.0317831007070115, -0.5447427924611019, -0.6704437465362245, -0.5992383437167161, 1.3310302200756894, -1.7477251851259141, -0.39604412703922875, 1.8398603114794474);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.24436218693551606, 0.7146076798607215, -0.444626079602662, 0.4640981942870128, -1.8405106535024889, 1.468910128477067, 0.33202592001417525, 0.28263798140525015, 0.43735332906842717);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_97) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.722178303509729, 0.6291466778078476, 0.42765441593522446, 0.9881207694971073, 2.715750387631007, -1.735217660960143, -1.642671828711176, -1.1121009054006332, 0.48519780862089057);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.3263522664785278, -0.41635384188197827, -1.2013627048090236, 1.2642006176079807, 0.8201145651345098, 1.8187145222113932, 1.7927306381327786, 0.47015344985076274, 2.1623127246691256);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_98) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.4383438148909597, 0.6404541766676988, 0.2002597057023774, 2.7507584041858726, 1.6975934484374555, -2.0086729450841463, -1.605436112209625, -0.37492729179266426, -2.1710904387806464, -1.3988000180171103, 0.7694403017349525, 1.0579902010127693, 0.7773272960695854, -2.7068415880790386, -1.2185105042176747, 1.7086696219447584);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.47237128164947584, 0.9616633177211243, 0.5116928700684795, -0.8662830268730699, -0.29059161371285175, -1.0336974610344185, -0.8580995173353453, 0.7723241508446627, 0.8750308454127973, 1.861838022462651, 1.7029151279949712, -2.054587989339916, -0.05123183468367549, -0.7473142962167229, -0.3777630946318125, 0.7376543193936242);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_99) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.2311240273625677, -0.664655121745179, -0.18936426478599877, 0.1870412472959817, 2.96075100248553, -2.202101949654084, -0.5755836352789379, 2.236436614328964, 2.6603014375951624, -0.24938361859184655, -1.5058366740434141, -0.4097842485753489, 0.06531617834921111, -0.8550354383598124, 1.9729320146166982, 2.662750568866084);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.60968632069007, 0.3931340971547519, -0.5637787178303943, -0.37412841038656164, 1.6122486202771917, -2.327501367152907, 3.8826292010668486, 2.4391291659493533, -1.8651410901954435, 1.6107920100740192, -3.3144327209950557, -1.7319602855236076, 1.9146174314921565, -1.95052340044269, 3.7163675687296656, 2.451231626902147);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_100) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.039746631359474, 1.4360457187206253, -2.9948473525394173, 2.346999210587124, 0.7114684655481982, 2.0669518729083975, 1.7573958767400324, -0.19242026336822438, 1.4160317372982467, -2.0658915731843814, 2.705065356962564, 1.4752009540812834, -0.6947356111194312, 2.0924529559510674, 2.3729306310816636, -1.2706794943093085);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.6780253228406231, 2.131202265878632, -0.3733404113849306, -2.008502963381612, 0.27030645118205154, -0.2461585482275545, -0.005688005507802837, 0.5299400612703382, 0.05769738154237692, -0.22151812281728767, 0.22520592986057275, 0.4015680502805934, 0.9235718047371746, -1.9842489319614254, 0.6153157013155363, 1.9337262617055855);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_101) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.339986576247795, 0.5673770796489013, 2.888624903429224, -0.7685955356059209, -0.35783731076275593, -1.703600352007965, -1.8403878772176911, -1.5462356224313116, -0.3272953889349428, -1.449021288214574, 0.6913819923528104, 1.5372473322512867, 1.8788031744125089, 1.0560402467892223, -2.3636978126329398, 2.4329578708563506);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.7730172983725416, -0.5386819989167606, -0.06630552689045936, -0.5446616901634181, 0.2680432707486688, -0.04739831115876149, -0.3352872187412291, 0.2664030045081089, -0.2761758606716821, -0.41928848102798355, 0.08697431920284208, -0.40867430179295844, 0.2122875207506289, 0.02920753752473821, 0.2812349724090412, 0.3189521996668747);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_102) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.9107135047497552, 0.5732210919607561, -2.612758409879011, 1.2194098624396261);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.4651883807785266, 0.6887568400322513, -3.139373710064316, 2.2958279347970794);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_103) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.5432259195064004, 0.7466323189675119, -2.2556324191965933, 1.8867953799719386);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.6964698131852862, -0.275603214439254, 0.8326180497833797, 0.20052012989434756);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_104) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.1646609445009686, -2.2449289031846056, 0.5942892998567322, 2.5667518549721535, 0.3114679702970502, 0.07967422171250327, 1.5176843879744926, 2.489130721548067, 2.2846940338929853, -2.531963593622484, -0.7623231671449511, 1.47454936218816, -1.6073909531888173, 2.8346491335219204, 0.40298227213633364, -2.7344217563028064);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.23897094213928952, 0.4058639418453642, 0.9769372664928222, 0.6719561517403287, -1.1075417435267247, 0.6454606599641506, 0.255460511952535, -0.3143113272281211, 1.417273585491913, -0.132397601899074, 0.23647144408634743, 1.3373662913711837, -0.7987927898842633, 0.41102605445292684, -0.27460482406351466, -0.8894471594401924);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_105) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.5466760371072366, -1.0267064188529194, -1.5118778945209534, -0.415332351254035, 1.3102216779609908, 1.121512541605476, 1.3059309592277115, -0.491656422297285, -1.7547700356706801);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.29257448548272613, -0.17716277023154575, 0.13884818148766978, 0.12317504842435498, 1.0786092384506192, 0.5832377660548578, -0.2522506499989581, -0.4340554546853995, -0.6299551691099385);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_106) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.46543838629183476, 1.2538252329922202, 0.049303105412180415, -2.6099487807003494, -1.1172982572050092, 0.35802314530169177, 0.5984848875037496, 2.9511663147419487, 1.1011294750394658);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.49826989267178073, -0.2691113396409673, 0.1098093766787869, 0.6728562051950304, -0.11809552134548267, 0.00827062556458773, -1.5325205664066093, 0.46277808913381513, 0.8263086009489243);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_107) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.200656001135081, 2.4597646134307842, 0.3913528818695129, -0.13836889745967218, 1.251987968748323, -1.9069384678547194, -0.8460769855774011, -0.8546935333039118, -0.8926002430167825, -2.797765165894858, -1.730798829807892, 2.461304455317652, 2.804122173193554, -2.943830088655267, 2.64007458972576, -0.8588689666388287);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.8086607521710246, -0.40951777611715434, -0.24847695019224736, -0.17426608557125303, -0.3873881218062245, -0.372715478003488, -0.22411697420391058, -0.20894937176220602, 0.24414435790257952, -0.21624505443480432, 0.044080257608845826, 0.302183695692596, -0.5619243912823453, -0.7242430862001265, 0.09242123954085826, -0.08821421369531784);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_108) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.7243442164105964, 2.6572472751121277, 1.517769041177794, -2.1125751847917362, -0.1666840863451986, 1.0652943331275235, -2.315999094559934, 1.3623556876126113, -0.7320461243480647);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.06908602125143155, -0.20856260579466723, -0.16026850483810598, 0.2086018100725528, -0.07903955764775862, 0.3174785968762321, 0.16964327192382941, 0.5127420292074839, -0.26815184075140575);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_109) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.0893718077293872, -2.445846594164758, 2.0874181248076384, -1.8121585911848288, 2.749783949798367, -0.722356289573125, -0.2024873618548675, 1.52517276665683, -0.32968698695834675, -2.2031258511565692, -1.0816739851976331, 0.6211426771559783, -2.269586563018411, 1.546911328273202, 2.5827880253688082, -1.7225057955457914);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.3147211376270506, 0.04004214374986565, -0.7633995629466566, -0.5709318813462975, -0.21552007696136397, -0.07252922333638598, -0.1027647547504816, 0.12545989017555534, -0.04482975669322575, 0.48805677782512, 0.3030089759135115, 0.5885735444120709, -0.67544798708609, 0.6139148068948448, 1.367914922358336, 1.1669135508355946);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_110) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.3532801617813899, 0.10692617995790377, -1.6771066713454845, 2.1651949712678675, -2.9556308624495005, 2.5157023414198374, -0.43934305347997515, -1.0157915942322076, 2.820365726202631);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -1.8933303311619356, 0.45921161787921716, -1.5354592603098616, -2.362154276937346, 0.08501323927138046, -1.4804649846980877, -1.1456946727551454, 0.10215241433626586, -0.4178313599480339);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_111) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.8158497639381075, -2.7037767249883387, 0.5260332230258284, 1.3540226495556968, -2.070407653902696, 2.1114096468354253, -2.058106744350184, 1.260165698950896, -2.5800875363178752);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.40685247999080426, 0.9579986942162988, 0.7010265108522972, 0.12929068876681074, -1.2667571778140032, -1.0102882522487113, 0.3876897625069983, -1.3828939785191439, -1.4402294260114026);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_112) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.2404690221961494, -0.6694657342476513, -2.878435304703045, -0.6916877450010821, 1.8635940725848554, 1.357266202312207, -1.1807338597051662, -2.650991403444028, -1.2004737745785565);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.14094193674396763, -0.7070404179426921, -0.46144266375142234, 0.2519653066662791, 0.3818790787173914, -0.17239382628576239, -0.4177875065604758, -0.14788460768518336, 0.0015456638316656154);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_113) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.9321181990623177, -0.9420023107705324, -1.9459550110052013, -1.7382740069698728, 1.5832284969676316, -1.2342471807340463, 0.9130931331470808, 2.162245684245626, -2.9637683865558815);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.1429522583030405, -0.49446881663276726, 0.29977896056232617, -0.4435571896066132, -0.06963628158882161, 0.3202310694436863, -0.36764287968993353, -0.20314233496995085, -0.011423173934971742);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_114) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.7424834233411461, -1.604578578259611, -1.939544995489797, 0.5787496898783191, 1.1180686818083352, 1.8425529354514376, 0.22595367529293808, 0.873129109583898, -1.124255033652705);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.3982597857437405, 0.4860403658152234, 0.1095056946613153, -0.14828095858646484, 0.21133958207317516, 0.6021782764709862, -0.03511672871981693, 0.26181723835001847, -0.3998002143868893);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_115) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.8786188539306243, 2.9323922448369366, -0.9849590818893992, -1.4002468650182671, -2.777370298309365, 1.1524676617001628, 0.889564393116582, -0.11580765361452805, 2.8670035675524463);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.4106804945944416, -0.4350113856779138, 0.03377500909153511, 0.26435547727316416, -0.08617329698492797, 0.12545895315075972, 0.13810276937321356, 0.13149307389706558, 0.3433843168757399);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_116) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.3713075255024487, -1.3424177542639137, 1.6012214210708997, 2.7358064123681913, -2.9370846187922868, 1.0581568087732496, -0.03989259490450081, 1.182142447070742, 1.139246143808653);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.2959016354095247, 0.22028483192999207, 0.21128721275872034, -0.20333989999902755, -0.09644930828517229, 0.37538041995963156, 0.2006348181569003, 0.1077945758655378, 0.4956572993662077);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_117) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.1966543039476407, 1.041460383575215, -1.338953932000015, 2.560496100651836);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.5336341640672344, 0.6237928752818276, -0.8019795436144661, 0.7167477906508024);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_118) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.328370161797977, 1.043361919911499, 1.2007316531219647, -0.3253204917093484, 2.187608741146077, 1.9248018771873951, 0.5039472387743817, 2.0868848266046784, -1.4252339310964808);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.475595946649694, 0.2661600696559633, -0.04122670970053501, 0.03375248119898265, 0.18087197922100157, 0.27270638819494597, -0.11874382129099649, 0.3589513342387249, -0.3169088617807851);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_119) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.277076017788821, 1.7716232504066536, -1.1945185034013222, -1.4967908140289305, -1.3484261602084116, -2.7385134676470004, 1.6692251951686332, 0.8985917814925104, -2.4707555746471166);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.20027717569835107, -0.11423316925304118, 0.22343928727589277, 0.28591972937989263, -0.26346696121083085, 0.15378753698790254, -0.03131940265544914, -0.17299571623593127, -0.19784931389867272);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_120) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -2.7248530135614883, 0.5634811778259485, -1.8982858523772574, 1.0328774893301027);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.5919777751982952, 0.32295053136637114, -1.0879732080418547, 1.5617074061287595);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_121) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.0610130237944677, 2.126614289641423, 0.5799527478609594, -1.5980846165929017, -1.2331409620247182, 1.2001675877398075, 0.9641536597348583, -2.797316572060934, 0.9671545346471913);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.16044735798703152, -0.27270400544062456, 0.24219358316972142, 0.20033514188440638, 0.10630377706999987, -0.25204582617361415, 0.41948301995961823, 0.5793219822361733, 0.06352263443688995);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_122) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.8490960581211322, 1.878706563720419, 0.10204712870887178, -0.6242842160764805, 0.8702615496890616, 2.750797196880465, 2.920691259275155, -2.959511569066973, -2.648048863054754);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.8383882812844682, 0.6712392832341039, 0.7295931289485136, 0.9166136122485248, 0.28016557153766924, 0.32635970890533894, -0.09971691552658919, 0.42723133737754654, 0.062329265395070305);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_123) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.8612898515249405, 0.11245155652852645, -0.17953750371265498, 1.4875733320816797, 1.2211489804792492, -2.0555968157912705, 1.4227159115451817, -0.8037747241037034, 0.3541228874830731);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.36393259593751903, -0.03117386140363148, 0.0035543016324393784, 1.029714483040984, -0.37851589494406124, -1.67513516216826, 0.8750797830214097, -0.7338976653879822, -0.9925595795101182);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_124) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.1108050727165377, -0.7815820629996892, 0.6078696369220631, 2.97636633885371);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.0513247233839835, -0.2760737263617529, 0.2147142875351612, 0.39236327214243455);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_125) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.3484894569078243, 0.9989290833998501, 1.7175812954881913, 1.0326060885061086, 0.20229462394689302, -1.148703656475982, -1.3610824704700084, 1.1226122557033955, -2.9465208814474515, -0.5472660276107906, -1.769410483526408, 1.154867151984023, -1.3079654461468038, 0.8980109954401101, -1.2106012619561908, -2.1464082422636217);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 1.0418890871586712, 2.3307511616031285, -1.431515637672951, 0.950043149437509, 4.201533560009258, 7.802143808618481, -4.457232107055125, 3.7037690639192413, -1.6823028303192122, -3.7211043911502433, 1.8634971453935119, -1.7528920288513312, 2.071770994768996, 3.942699459667273, -2.0435173333608514, 1.4934041769134858);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_126) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.7059164028981577, -2.6503128523828003, 2.943707990085887, -1.9932077367821093, 0.7091901677553576, -2.1992100526554377, -1.845771629483308, 2.5429989361853407, -0.8891667483429098);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.16239355235525757, -0.16786805762759494, -0.12243156635707958, -0.07484586104599543, -0.25656423084661356, 0.386782655879408, 0.12304606187130021, -0.38530058448445414, 0.23569099335072644);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_127) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.5573155931147822, 1.4607186503516676, -1.378189492926806, 2.640523107586654, 0.5868662488404128, -0.9211944438271544, -0.6761204662135212, -0.7876488440629297, -1.629914607512809);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.24391300537740893, 0.5026361913672351, -0.07783679278032227, 0.7143830948954712, -0.5031781457300523, -0.3196672763138009, -0.24404250515196108, 0.0346552319603998, -0.42676308776993793);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_128) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.3763225751818906, 1.039826577672189, -0.5033273194386259, -2.835368632496989, -1.8868661978354666, 1.0913025534947858, 2.5312057485685626, -1.3856964105298615, -2.570070244410931, 1.4130783542968732, -1.713467882562471, -0.9852125985148126, 1.0867786961491248, 2.7488932706773337, -0.18532202293077393, 2.7369872781031788);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.553242359997676, -0.28264246270311716, -0.6030762824600427, 0.21294619854199578, 0.4140185891391416, -0.0382826477785288, -0.2141253213712444, 0.33244152660369447, -0.11837711007946969, 0.2942766031668705, -0.11258838332703205, -0.014171861895100637, -0.6435115076610447, 0.17060388226527157, 0.44689758471235413, -0.05403679683654654);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_129) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.3331607072580987, 1.1105720298256978, -1.1972438883161707, -1.044338901553873, 1.5869390677599409, -2.9304550820334714, -0.8719122750600299, -1.579906958409723, 0.2796676912512108);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.6918302171729145, -0.26128427605152343, 0.22386448850060633, -0.47055472896052875, 0.11090516506366498, -0.8523192926406908, -0.5013715791034297, -0.1880700817692531, -0.5413388478262824);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_130) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.2028658258053504, -2.610899629662627, -1.3309397456821421, -2.282348456284897, 2.2218701051167873, 2.621484592002192, -1.8755573919226562, -1.47067271605562, 2.581410644179714);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.661218785881964, -0.5996034128092083, 0.26799639446327084, -0.06721415128003103, 0.20820110436550351, -0.24608791862511117, -0.5187101102951054, -0.31703399508272584, 0.4419009557984628);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_131) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.8782859436947494, 2.5121656971590145, 1.0395267188008912, -0.730528385737073);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.37085472557691934, 1.275307761359145, 0.52771857132124, 0.4458642524867085);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_132) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.691329820142832, 2.326291508276233, 0.18084202103370473, -0.45981064279035033);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.287984294257732, -6.516219173054334, -0.5065600078757599, -4.737615970639813);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_133) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.9556470412260332, 2.527248222331008, -1.7800023931126985, -2.995904900558277);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -1.8318196980347163, -1.545263694660827, 1.0883668055168123, 0.5843219770294539);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_134) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.2620682169250035, 1.9132003516141314, 0.08341114368866132, -0.5484621364557962, -0.6895919515413693, -0.3494893159937731, -1.8140048580891257, 0.06617901867290144, -1.5514877870145487, -2.783860260999117, -0.9783904988925767, 1.8353477843738935, 0.5159504692764019, -1.2199678397173146, 2.3640144880953624, -2.2404708250546768);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 2.1925301680246787, 0.07724572226397076, 1.2739787311204867, 0.5091725786570409, -0.82283189513046, -0.16649788625148365, -0.7284214830432781, -0.40019859778712213, -0.6658240009755743, -0.5664000636419486, -0.3315520743191897, -0.12533879404964962, 0.250415148256279, -0.4891833051303147, 0.34018153303760434, -0.2434155666095021);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_135) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.9720615366381415, 1.2740337480473833, -1.8032144693351086, 2.0182844853403354, -1.8852353639251531, 1.9989712343457828, -2.8721119468113976, 0.18972785330996356, -1.32724397209105, -2.3607955017903075, 1.9582399040378524, 0.8227707275185705, 2.3835874977264684, 2.1708343710504767, -0.7515413339676673, 2.0874414512660424);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.930344994746903, 0.9990278603253039, 0.7981928648627122, 0.4941109762990257, 2.082397301463686, -2.6909825980923845, -2.3522855974998054, -0.8416638851241793, 2.0355391524469626, -2.8347494511213225, -2.109895289932282, -0.878829956574567, -0.3704003902512654, 0.6371320322873605, 0.7752008423561338, 0.4737278291609641);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_136) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.6972609134267855, 0.8571523762978503, -1.496560414742118, -0.9097322071276066, -1.365462277480917, 0.4416682853579794, -2.317705386741973, 2.5963641972779454, -1.5555282052698123);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.21611797631648633, -0.5644176769672691, -0.368182970865485, -0.5393136615365128, -0.18320449241703718, 0.466850977365274, -1.2221909402581421, 0.5351804631809668, 0.6849472830948793);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_137) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.88548734718781, 1.6614065405908534, 1.2356109014962025, -1.677602934987329, -1.425484438828305, 2.2165731210270554, 1.6074866632446199, 1.582613618606258, -0.46035814089598404);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.22968042501894434, 0.21909672320145257, 0.4384592181793579, 0.22477295330395633, -0.052985081821684814, 0.34817805756739206, -0.029280427205836786, 0.5828943263840276, 0.5557600886736942);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_138) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.07311931855601, -0.09018735456004467, 0.19185389406432307, 0.5195180455141077, 2.3348124039411813, -0.4938903145450233, 0.019633391452604787, 1.0074507350168096, -0.2706076468166403);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.6763224025015512, -0.8507836719746968, 2.0322740631821508, -0.6593996427771812, 2.8452260870756065, -5.6603647913423, -2.405823190762768, 10.530823416719208, -24.62102721655217);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_139) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.025170233689571386, 1.915277779733473, -2.1543577789486914, 1.112452682412929, -0.021833969328467262, -1.9648013421558959, 2.709853152886377, -1.9601061903526051, 0.89901443381072, 1.263543202281114, 1.8550130294710785, -0.4832118952438713, 0.21189010636749073, 1.5715164848769874, -1.4087814780725516, -2.9679231144761395);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -8.546415614620564, -6.821132532585721, 0.9142851241966162, 1.1526133081058303, 2.9997052328811598, 2.1841764222641626, 0.04579985015803501, -0.32558748608376814, 2.0945164480613254, 1.7732018264092886, 0.07840893030562145, -0.3987642259767539, -0.016014790852735664, -0.17214567717283186, 0.052306659245060574, -0.23776461259365728);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_140) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.4217944594794094, -1.0976454234484636, 0.9518223015757954, -0.7776659758495073, -1.5090034051499517, -2.040026215282375, -2.6704561280729457, 1.9363000919643243, -2.3360880950631966, 2.31404284001026, -0.19963956012718143, -1.915048303527941, 2.379450981898911, -2.0683298691310745, 1.2950633330132515, -1.6202693017039822);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.8273550678381097, -0.08745278014929157, -0.10115862515733681, 0.41215044483730556, -0.5089933219331377, -0.18538636055226315, 0.023151408948498726, -0.0046121376289161445, 1.0619187633694898, -0.2496346886844389, -0.21326806800551548, -0.5559366639038649, 0.28351294133118976, -0.0913071602011356, -0.34857316310404357, -0.4503831464655486);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_141) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.5082063039234597, 1.852751287544164, 1.9630231452578393, -2.1551237430312455, -2.0579557007473497, 2.5927048130744197, 0.8896089662076236, -2.0403231078383093, -0.2518122406553842, -1.6700631453718713, 0.24328362047975371, -1.3297838649552325, -2.335053819726408, -1.2027552684963003, 2.460415529378083, -2.1311432250846027);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.8203576385794861, -0.5899184151635323, 0.3359563520252738, -0.4744389653560135, 0.20389447714773834, 0.062251725750044534, -0.15350236769621328, -0.17000569800531778, 0.6201478066283925, -0.5946156823110154, -0.3513631179485452, 0.16139218405806235, -0.2979589042637171, -0.0752572606788068, -0.6871193058260361, 0.33287654947753764);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_142) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.2940626553560732, -0.4908528291776211, 2.0256192337260304, 1.635927411708109, 0.035313056790738706, 2.695421780868023, 2.469970415325652, -2.9611404983175023, 0.41274823308219766, 1.1631727550277091, -1.4577185108599162, -2.6475420328366432, -1.6732076654035934, -1.3779378762140426, 2.421623922682154, 2.5765342010409613);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.6193800612801237, 0.13000048610966913, -0.3692976326306493, 0.16319578430098702, 1.2314884648236704, 0.15819464562691216, -1.3894574303938094, -2.0278543606052004, -0.48321042116144997, 0.20359811034109723, 0.16136911713535534, 0.7066125119530768, 0.710534736276125, -0.02233149115706031, -1.1345756496132267, -1.2545327965667727);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_143) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.3045411386723491, 0.5156337340605042, 2.591199312721548, -2.036981273232188, -2.2842993874362936, 1.5472808234453144, 0.16650433015799182, -1.4643575129646487, -0.8595517962798365);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.6353268248294227, -0.5034290395458333, 1.0090285853052186, -0.22432116507985808, -0.02548926353462051, -0.7221204122207567, 0.5052296472194429, -0.054095309504379074, 0.2622879512123175);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_144) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.443454571740876, -0.16347642088183356, -0.2218947753524212, 1.505571489356889, -1.5960099895021422, 2.191095889301108, 1.832988832896433, 2.302097828691669, -0.9262941559577844, -1.418434881371351, 0.8677362725095152, -0.14447654361374962, 0.2621311067622587, -1.7288201589311725, -2.7219362171072112, 1.6582643093899936);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.8823469229818683, -0.33303347254831056, -0.18373351225371284, -0.3547721050216726, -0.28913636910822565, 0.1630269156288834, -0.41941731721775016, -0.0003524160425456953, 0.5447140218454518, -0.071492550223123, 0.2789693919684717, -0.3710014860102944, 0.4531976360509996, 0.10525733940090945, 0.049691745098933565, 0.04977804728690918);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_145) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.2934515010071035, -2.9263414326360615, 2.630154571991749, 0.6930082584246335, -0.5340856546169208, -0.7055678754002077, -0.3352184257665023, -2.6013311309098635, 2.5697549397440174, 1.409899701251235, -2.455632209890997, -0.3694362243132949, 1.0690003894219373, -0.0885169615444732, -0.6056532642623864, -2.1197991334894493);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.08948467958528841, -0.3789980102729947, 0.02680919874390933, 0.4896731200005824, -0.3666911568281666, -1.3083153399589174, -0.6066436479902159, 1.5913571755136253, -0.1316432995850643, -1.1778747244662668, -0.7662577630776134, 1.535945372696611, 0.09805067620791523, 0.20003911839059224, 0.25778093933481117, -0.7300935499927153);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_146) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.27345534554061945, -1.8380802079507965, -0.4536295472288021, -0.57793407521411);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.5826849064338726, -1.8531899050786655, -0.4573585493894429, -0.2757032493215551);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_147) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.8309358433484277, 0.9744288535706853, 2.8669632424725116, 2.956226746753149);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.530242388592146, -0.1747780285791355, -0.5142316770403833, 0.5077696374869904);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_148) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.5393385361878247, 0.9515761303329149, -1.8223666438041597, 1.98047481123948, 1.8327765482854712, -0.2992086932460847, 2.3715398933816116, 1.138957360468341, 0.8121651739038649);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 2.9608531799380304, -4.61038792916519, 4.945166394382857, -3.7519364543980696, 6.2861704523636215, -6.102855868307298, -3.38414633160324, 4.646885773199711, -4.650244671843192);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_149) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.5178871985484275, -1.1715970860139004, 0.19151515739790526, 2.590152122904737, 1.3091946253372848, 2.5436005507244825, -0.6233262083654214, 0.23930181349694823, 2.3691641767863665);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.8187388266531967, 0.9266316678984602, -1.0610415861721039, -2.536008639987934, -1.9198788824548363, 2.26623765849314, 0.4715641262851472, 0.43771736569775144, -0.08597538841544923);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_150) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.10636970419978997, -2.289016591058041, 2.2408562537896746, 0.921944350844198, 1.2334597055489098, -0.5220271324551495, 2.6936659097864606, -1.0057458139033888, 1.5007299777339194);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.44257100889728584, -0.39431126909642134, 0.5236763732267319, 0.931075593025177, 1.9612654895493338, -0.7080372762948226, 1.4183523025595897, 2.0221341777015795, -0.748112410426969);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_151) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.6307188041138017, 2.4184291228345485, 0.6500234451671654, -2.3637807438322476, -1.6731277645219065, 0.5024220560688373, -1.5851560630305546, -1.6621697655012868, 0.2360617766204105, 0.6691810097266484, -1.2439203436224762, -2.0444918853530982, -2.13832860545546, -1.8066987126152667, 0.19133512413195586, 2.607184096276634);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.252172173911207, 0.15652704681185126, -0.3992110332270866, -0.4418901310994056, -0.7978970506601204, 3.3478094718809697, -5.078702382439944, -2.571660289616182, 0.8774455465969164, -2.4941540953841623, 3.0825618892368447, 1.62269098436267, -0.8241353968241412, 2.63134798110184, -4.07302721927469, -1.8800357942703707);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_152) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.35933197089969937, -1.07808147316709, 1.9290255024423821, 2.7365175159599744);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 2.4960745871894816, 0.9833563104923797, -1.759532510427855, -0.3277594225859758);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_153) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.27372591964425297, 0.09603007600137925, 2.1924875173230314, -2.0516054943024358, 1.6505501638957236, -2.076985270011742, -1.0962211087365379, 1.7475288925745547, 2.425898116341007);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -6.892930515480829, -3.2492999758232357, 3.447760591837091, -6.549950514154587, -2.769830852390259, 3.5482886946266445, 1.603551200312474, 0.5269834752623741, -0.5858568687779685);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_154) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.073435757108033, -2.3502069359456694, -2.4244807012436453, -1.8477220459555208);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.24054363492918807, -0.3059590702214145, -0.315628317565061, -0.13974403749899675);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_155) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.4096847240071526, 2.542314984638386, 1.017762091479046, 2.386764290661853, -2.110947276424744, 0.618651815382929, -0.21607778208360884, 1.607834517791936, -1.6880016292467894);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.2641678599644834, 0.6096493257820171, 0.3827133129541371, 0.4006017428777235, 0.26734302429556867, 0.3395195271508882, 0.3477606269073637, 0.1766062681601673, -0.3180119138030308);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_156) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 0.08328181919700706, 2.4408947212565986, -2.965875053450641, -1.914168665523018, -2.6584605587175423, -0.6428528188960834, -2.1393348809617887, -0.4745917341288668, 1.0898592349616152);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.1432479723159165, -0.05603221806078507, -0.42287668177145143, 0.15483378108337645, -0.27975740088980927, 0.2563402740606294, -0.21376389139337354, -0.23181179777558322, 0.19909189423173615);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_157) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.3114555802107724, -1.719182977695434, -1.8977720569609875, 0.597091715992303, -1.0639320900680302, 1.437642227147843, -1.146238269077115, 0.3388559083614324, 2.9739539139085727);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.22461039957874795, 0.274959034012807, -0.27624908853286223, -0.21060716793175907, -0.556688665463533, 0.13471450672947055, -0.06257378487360085, 0.16940605846913703, 0.2144296565579829);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_158) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.6597323100754267, 1.4774889189628269, 2.156388545262888, -0.7109542880482396, -1.9019279894553138, 0.14610045784355163, 1.0385162339642866, -0.4851268393558401, 1.281785113388925, -2.635878327694959, -0.5763360131412143, 2.486760639216934, 0.7227383689510685, 0.18745558756155178, 2.9040794649724972, -1.4767078933299342);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.03474505911987022, -0.47995117342304666, 0.0032908034810545327, 0.1464869853972138, 0.5850997111594922, -0.386864578232721, -0.09526037423930207, -0.3150186368776272, 0.2945520423854666, 0.06994035667460421, 0.17865893206482653, 0.13607228568809623, 0.6705417771685249, -0.14646546040733902, 0.3408670317488373, -0.3778780560949078);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_159) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.1440395698762034, 2.8743276638250794, 0.5028937562912024, -1.0152350243937227);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.28028244942130714, 0.7935340868853678, 0.13883710709857935, -0.5919187654700694);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_160) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.2976171074337586, -2.089432399267401, 0.5535788377110968, 0.5689875968794667);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.23092205326176818, 0.8479903998552398, -0.22466845067905705, 0.9324815918093965);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_161) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.344337983189945, -0.4029485014190546, 2.2507765503972177, -1.76764920758577, 2.023511154963132, -2.719023567044351, -1.558307723375584, 1.5189564964762896, -2.2733436586482534);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 3.4541145909512387, -18.39120387594843, 25.416551812969566, -1.6063430102187317, 13.389173982935644, -17.604464960634537, -3.4409837534620578, 21.55271494457228, -29.62474465946621);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_162) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -2.6654949820026212, 2.379702404821015, -2.5642936465493564, -2.251780739725967, 2.6238172923421406, 0.06145745803783953, -0.9491335106190641, -0.4664118793164391, -2.631426360163823, -2.100299837284413, -1.3876375648918449, -1.9546904382658488, -2.699980205864967, 0.18388620814320866, 2.3059966656759885, 2.5989844207965707);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.08716464034322723, 0.019782064712110994, -0.11184735711138341, -0.15609021145939586, 0.15024954417363418, -0.3748297515788843, -0.3332918753918817, -0.1877573629185002, -0.32183282994950885, -1.8551919398013406, -0.5057992271074027, -0.9921804145120712, 0.18436963546337218, 1.693124282327598, 0.35616737549321537, 1.1162245578113585);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_163) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.5937912703856576, -1.5949606216541754, 1.1903814503042636, -2.6758102067090013, 2.185025015129373, 1.3767646445128587, -1.2360078177444735, 1.1962302166358327, 0.21111989238228634);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.38155519245068537, 0.5666238521376474, -1.5437269284415887, -0.36583435813241805, 0.3652115238065032, -0.31890827141361167, -0.16096582328175854, 1.247984961287198, -2.494179186407091);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_164) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.36771894079683687, -1.6442027637784302, 2.531348245338884, 1.6134026412107314);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.45208913915118665, 0.4607195953942314, -0.7093053029021601, -0.10303797399865222);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_165) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.7719778052555624, 1.8455672977246547, 1.3317509802020968, -1.8873538812562607, 1.2202197320542298, 0.1288225499464435, 2.755962495154268, 2.7166610364353003, 1.103286080147777, -2.3632844268633963, 0.5803614934270018, 1.6501679307162247, 0.2743094983483285, 1.6003544366137135, 1.3058869264847566, -0.005711405345727449);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.5899555434580747, -1.06094250920291, 1.0800410326627425, 2.3606771374714626, -0.31602204520466043, -0.02115403963330275, -0.32484988851738117, 0.511294478270055, 0.5101672894617026, 0.25136473951163896, 0.16843024840666582, -0.3598458668044771, -0.2375768439602535, 0.5906354474899401, -0.6405756230951898, -0.7195190505738293);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_166) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.844632127886217, -1.0938997109945259, -1.1799064418899814, -2.387923463134128, 2.9232920135820866, 0.9345640898130405, -1.4796048846329763, -2.0385533662827022, 0.8826621987070533);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.1838325590763765, -0.13815178375919873, -0.09946446643684963, -0.02971133262389065, 0.17445561494715198, -0.22443075736799512, -0.3767779904796171, 0.17133058067750911, 0.4478698807559602);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_167) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.72754933694325, -1.0166706456662542, -2.6276745878210015, -1.1638912786495539);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.6378565425915531, -0.5571740547376834, -1.440065286499886, 0.39872461727340586);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_168) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.7899456086216807, -1.879452377401724, -1.837464435735642, -0.48470139906062126, 1.023446908027302, 2.348591858865941, -0.5714848209270205, 0.5038459350886102, 0.3573604628489129);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.2694313943050449, -0.08375587118701291, -0.8349055889551147, -0.38522731590835557, -0.5568429704818405, 1.6788521307085083, 0.11226553927972394, 0.6511572552205569, -0.9039015958625627);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_169) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.19934124441081558, 2.0781266231060957, 0.8433514577788963, -0.5057598629381514);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.3061922383957137, 1.25811929539453, 0.510573672476629, 0.12068324575253762);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_170) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.6815018595249835, -0.32787151721477503, -2.685789291748982, -1.1955227412561478, 0.8536499322069977, 1.94405493723173, -0.5718777409302875, -2.417870626494176, 2.0161961631004086);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 4.949631374918439, 5.514878256141051, 1.27588807570293, 1.0009690730801661, 1.4292505795490553, -0.044712726624977814, 2.604308958152784, 3.2782420846665317, 0.8042582521248113);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_171) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.6421632650829423, -2.974822709570603, 1.1954287018002834, 2.8084832449534716);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.5240007458481544, 0.555036004356454, -0.22304050860093955, 0.11981343683085513);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_172) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.158164989389694, -2.0340517989779023, 2.857810216039053, 1.0836189581049886, -2.296971084158405, -2.717791425592143, -1.0124827024183547, 2.6788341417303485, 2.6485573490280254, -1.2633755521489451, -0.7302016184875733, 2.5790026909801647, 1.716941791769238, -0.7386526025766997, 1.7468568160213769, -2.1240567150487912);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.053605218470040406, -0.10161278692055865, 0.23148320136102776, 0.12556367422326975, 0.1245860637335881, -0.3193764189888623, -0.06241895341286839, -0.41502247903641903, 0.37594090179215167, -0.15025116451038437, -0.16573568415332357, -0.19893726633813233, 0.22252327976856875, -0.09464073476484204, 0.07251811794162649, -0.3885828282011541);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_173) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.2516893578276842, 1.612042728753389, -0.07772409106322842, -1.5861976575881733, 0.4895672237806794, -2.541405360891307, -2.1463673301364787, -0.5855727085740909, 1.059012727999841, -1.2484310885346817, 2.589058337205655, 1.694323604603369, -1.3275902420226149, -2.35880538313963, 2.975807608601624, -1.9789730914361015);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.8299407460908425, 0.4262626696289051, 0.6491009293579937, -0.23561251491565263, 0.1842291841432192, -0.17069437800440754, -0.012251706293432299, -0.10764587309066623, 0.12974392775806912, -0.10215128906608462, 0.19668645668671894, 0.09462887585845496, -0.5812555334082665, -0.2361072660778936, -0.12508488159837622, -0.076650931366356);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_174) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.813060443288214, -2.1647101313229906, 1.0779677070131362, -1.4276558114224749, 2.59965263874257, 1.0396104419143155, -1.6076074635067281, 0.7850026566262533, 1.8859476289231605, -2.67745313972208, -1.871281047298241, -1.0815381904548034, -0.9000215335536064, -1.9336604774818, -1.316702276621692, 1.2965216892681468);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 4.919210404545415, 5.4653889346412505, -2.107511107569455, 0.3495820722303772, -4.124280368752502, -4.286445609434851, 1.6862358503257069, -0.5394843611512435, 7.839049763143055, 8.28212136898503, -3.5785775606597925, 0.6321601718297046, 5.224850514121415, 5.812108961043711, -2.582385631054242, 0.8513691301491175);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_175) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -1.2151999331577976, -0.9358571146010304, 2.9924006806037893, -0.4814749165999146, -2.7552247237756715, -0.2651924631305196, -2.8536856536275175, 1.051074565467955, -1.6787856854365224, -0.9115601990428379, 0.9302392261850887, 2.2958786718341964, -2.1682891747962048, 0.10590063625067625, -1.1889822921523907, 1.6340591908822866);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.3047254650171353, -0.04436843906744385, 0.2739273211234588, -0.4461203292446893, 0.06737850965520216, -0.8340953167596248, -0.7383783984786519, 1.5938006813222492, 0.18771932851187456, -0.31673307138877616, -0.06059343653848328, 0.34417810882169714, -0.27212808392090815, -0.2352805802626397, 0.36724732344403666, 0.16714161365321378);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_176) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.5943068587857363, -1.6256695954259044, -0.5455901827790148, 0.6748274682625945, 1.1910510121566462, -1.9416753196221619, 2.0093921358527345, 0.802996817952371, -2.3324467787378866);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.22087996575716295, -0.7665075067106745, 0.6897557807708942, -0.4217867464030155, 0.4498575240146964, -0.2758281773143005, -0.33549656459874483, -0.5054691950479325, 0.07052709384607059);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_177) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.06911224964379326, 0.82071926913483, 0.4816853329164985, -2.392040866993817);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 4.266566350396472, 1.4638768363574546, 0.8591585792946099, -0.12327214087315637);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_178) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.531145996027618, -2.208432934310024, -0.12403449210850104, 2.2655532336962834, -2.350646669999109, 2.572655871287685, -0.5944085711871336, -0.6378626731658361, 2.818783897484404, -0.7409538817478998, -1.161561018689194, -2.5766868100745706, -2.3142586707548984, -0.8871646737103536, 0.9731628502391514, -2.0366007500029255);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.501115819888427, -0.5631931271222043, 0.01090363094798396, -0.3948539912274068, -0.7007122991514061, -0.4181241459256745, -0.12356900841619073, -0.4921910176437187, -1.3152386762598023, -1.4192768765013621, -0.41143412632918924, -0.4980370389958679, 0.24620309628004067, 0.1439319998422331, -0.15516058829671767, -0.06590510582028997);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_179) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 1.6030403185627673, -2.7963880787071695, -0.7048789033192193, -2.197435736745743);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.3999924492494987, -0.5090178966100987, -0.12830693259794657, -0.291796484668625);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_180) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.7161755659996452, 2.220037178792434, 1.901358929737822, 0.667102594923076, -2.0239453176668016, 0.6932411685279862, 1.665522900319429, 1.6360053139830262, -1.5875197413536362);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.12252935144121682, 0.39106154611560723, 0.3175218717491203, 0.1304708743088436, -0.3472244437205329, 0.004637222857614001, 0.2630055385137446, 0.052447174828377095, -0.29201119075035525);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_181) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -2.461378262590835, 1.7883382324086892, -0.20948853282292923, -1.4925833283843655, 0.6038935792230773, 2.147653741741413, -2.747069743973162, -0.9044029241585863, 2.553405743115854);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.2692335164303111, 0.338201573922117, -0.3065479163077526, 0.1613844866822364, 0.5301000782946628, -0.4326234560604983, -0.23249209295485898, 0.5516112649896364, -0.09139731330085116);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_182) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -1.007312661344214, 1.509700560398593, -2.8381999874579598, -2.8816628444442873, 1.365705009159857, -0.4677187430897227, -0.7245952257557922, -0.6874808883565926, 1.515456717589295);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.5661559703347792, 0.10903835653674272, -1.0266638213927142, -1.5240936134479888, 1.1604385934686563, -2.4962267482112845, -0.9620988362959572, 0.5785635561315368, -0.9634216991427285);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_183) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.6817400534013487, 1.15302088760889, 0.2974217280126332, -2.6043846340017707, -2.039045240667889, 1.3172388340861332, -1.4254274193402612, 2.5244546311636196, -0.0439386604737626);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.30645823408542455, -0.07590997080637475, -0.2012856969182236, 0.18867030164347676, -0.033154531026961476, 0.28317229543832007, 0.8979710936456939, 0.5577558380116902, 0.040369099231151014);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_184) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 0.8436441692492864, -2.618508690453326, -2.9060343872393357, -1.007841031372805, -1.3324599093666134, -0.6389263942761869, 1.802139422418886, 2.4783817927809872, 0.1616864101046227, -0.6653638762138243, 1.1120012505014003, 1.4107369891250512, 1.4582005625898002, -1.1884539251894335, 0.3281814512381387, 0.931152399871884);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.2522558659047528, 0.25088509058001085, -1.4255928715423187, 1.2190418483987506, -0.6608211828954009, 1.8924325451711044, -5.600320774725033, 2.732535084138324, 0.38005511771349576, -2.658756987133252, 7.219497045722417, -3.449877244118641, -0.5823353118541917, 2.959540063626277, -7.45981849841684, 3.8684003374424547);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_185) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.5015749444824857, -1.5606486473232897, 2.5289515245562697, -1.4669426258369511);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.4568458636580209, 0.48602846941362016, -0.7875843424523901, 0.15620409051144032);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_186) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 2.171255271308259, 0.9452816989330972, -0.9073943152313619, -0.845938505912402, 0.20812295980095818, 1.6918504611680678, 1.5681329623072013, 0.41390803539010834, -2.3086094587269725);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.9166949810217132, -1.4026740754402531, -1.38824632458605, -0.5435403235920113, 2.786908259577968, 2.2560062743563596, 0.5252182884570987, -0.45311073580807326, -0.9716566342821596);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_187) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -1.8671352998372028, 1.6949277325444392, -1.9648186045814822, 1.1672155734537188);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 1.0141973842705747, -1.4727281848954752, 1.7072372359086867, -1.622359896699263);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_188) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.9775828471348014, 1.8831203087956077, 0.6857325807575618, 0.39487485562068425, -1.4202108006967777, -1.4683858468483049, 2.9821840412271454, -0.6513275907636356, -1.163281260682995);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.13044450752699796, -0.32699271154442555, 0.3358615272740278, 0.7349333102266253, 0.17020809175712925, 0.21837931301499983, -0.745900325451089, -0.9335778964241158, -0.12089559926145912);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_189) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, 1.3562818900937925, 1.7259834472735864, -0.09985914403373153, 1.4667649692302938, -0.7635649034127794, 2.1113671766551763, 1.544143356604243, 0.8777781770672011, 2.458782637493572);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, 0.6319239813427282, 0.7336754388904334, -0.6043457560912412, 0.05864065518219526, -0.590975269763227, 0.5098545814131016, -0.41778996215960407, -0.24978005396518416, 0.6042247235129946);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_190) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.058196929820950594, 2.1594437513580154, -2.486716898154413, 1.3291480160934164, -2.614846180792232, -2.073082279819734, 2.536381265322227, 1.9396300474688726, -0.37323074908371634);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.14926261599028343, 0.12000084793810817, 0.32795325230419664, 0.14224581802536398, -0.1890512950757719, 0.1023329683228143, -0.27511838264677224, -0.16697892674135878, 0.08118994837874886);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_191) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 2.032859788622174, -2.532526592247425, 0.7588702615135245, -0.926785046616649, -1.2112807619793227, 1.807974865327755, -1.510587055774929, -0.23728390230376561, -1.9983589216328919, 1.3157409628389232, -2.284362862615154, 2.3705914578057126, 2.9927100151611343, -1.2124606224640817, -2.154876321635837, -1.9042073695393196);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -1.2245120592755745, -1.2278128706712237, -0.1386086223742021, 0.5764158339945196, -1.2297906054306587, -0.7349716427537729, -0.2637709932953767, 0.3617543081464386, -0.3778841159062848, -0.39832650132083064, -0.23924547057233592, -0.06428892998497018, -0.7138105379556183, -1.0109294734135166, 0.22084828400207784, 0.22317279379571464);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_192) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, -0.5799885075814135, -2.9696147830027546, -2.5402290286059404, 2.7184594459882545, 2.5105782216904897, -1.587223825968035, 0.7604744978026536, 2.5611952667380624, -2.5836608247802992, -2.2244332319618136, -2.8459685215274053, -1.988889661064675, -2.0354236009765403, -0.8242392461358774, 1.4735964441476126, -1.9466423402263064);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, -0.3537532531981225, 0.397687570113033, 0.2859011926207837, -0.26288048194898217, 0.048124284009462975, -0.33745741661335804, -0.21466098238745665, -0.15746776327119544, 0.025690063024103336, 0.06112993261371325, -0.19473197287252367, 0.3152625849161944, 0.3689576495842831, -0.22666524759185, -0.35546045475216365, 0.06649093627267975);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_193) {
    S21Matrix A(4, 4);
    
    A.filling_matrix(16, 1.2250773722683164, -1.360549660159943, 1.9467913756741844, 0.155145173594895, -1.92231142040466, -1.3184637243343773, -1.3700876359097054, 2.568380449560002, -0.22346279791404733, -1.8924183347816437, 0.10636843636893367, 1.751580390896022, -2.571963869517546, 0.05564625190076278, 0.7136604672269931, -0.029490081889058217);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(4, 4);
    expected.filling_matrix(16, 0.4336471652889347, 0.3617660454088352, -0.5756541743023429, -0.4026255542361132, 2.039579733163312, 2.3649979654397115, -3.6565575758739204, -0.4784340270516119, 1.493385991639887, 1.2237853303238067, -1.9273429872728824, -0.03588451408764622, 2.1682093371583693, 2.5269948528681163, -3.336053236070431, -0.5660900196973501);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_194) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.780969984188836, -1.8318801280492925, -1.6588146647071977, -0.42727588185596366);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.12669639066267627, -0.5431914372100363, -0.49187384479512275, -0.23157421800364564);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_195) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, -0.852461607580326, 2.1838211407015065, -2.363386078598392, 1.8445475200606065);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.5139724029686762, -0.6085090175954205, 0.6585437397243201, -0.23753345257931044);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_196) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.8320979956072296, -2.512529623376666, 2.815776527151609, -0.7382952067303821);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.1481390842076886, 0.5041395827287728, -0.5649861359835097, 0.5682610419667788);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_197) {
    S21Matrix A(3, 3);
    
    A.filling_matrix(9, -0.5666934205382939, -0.14936616287998028, 1.4773765361170446, -0.6369795813329753, 0.10876846778919624, -1.7168007877590001, 0.8914166306365106, -1.4807411175479985, -0.7967067139616617);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(3, 3);
    expected.filling_matrix(9, -0.8635049633466783, -0.7576751501615118, 0.03144861534945848, -0.6693987402357108, -0.28428900754390524, -0.6286960951254766, 0.2779737510133577, -0.3193719875555832, -0.051499531827486664);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_198) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 2.034347599371239, -1.361834916451853, 2.261300665752608, 1.3633996010803253);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, 0.2329344577125345, 0.23266713405691983, -0.3863392976532374, 0.34756475979812);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}


TEST(S21MatrixTest_InverseMatrix, InverseMatrix_199) {
    S21Matrix A(2, 2);
    
    A.filling_matrix(4, 0.47229666761050915, -1.8308598987644826, -2.5504428298511073, 0.7222578390172378);
    
    S21Matrix result = A.InverseMatrix();
    
    // Ожидаемый результат
    S21Matrix expected(2, 2);
    expected.filling_matrix(4, -0.1668654900582155, -0.4229892951400403, -0.5892367928434623, -0.10911617795789516);
    
    EXPECT_TRUE(result.EqMatrix(expected));
}
